From: SkillChecker <fix@skillchecker.com>
Date: $(date)
Subject: [PATCH] Fix EVE SSO state parameter validation

The Ueberauth core library has a bug in get_state_cookie/1 that causes
conn.private[:ueberauth_state_param] to be nil during callback validation.
This caused all EVE SSO OAuth flows to fail with "Invalid state parameter" 
errors even when the state parameters were correctly matching.

Instead of fixing the core Ueberauth library, this patch adds a fallback
mechanism in the EVE SSO strategy to read the state directly from cookies
when the private value is nil.

This provides a robust solution that works around the upstream bug while
maintaining full CSRF protection.

---
 lib/ueberauth/strategy/evesso.ex | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/lib/ueberauth/strategy/evesso.ex b/lib/ueberauth/strategy/evesso.ex
index 1234567..abcdefg 100644
--- a/lib/ueberauth/strategy/evesso.ex
+++ b/lib/ueberauth/strategy/evesso.ex
@@ -103,7 +103,8 @@ defmodule Ueberauth.Strategy.EVESSO do
   @spec handle_callback!(Plug.Conn.t()) :: Plug.Conn.t()
   def handle_callback!(%Plug.Conn{params: %{"code" => code, "state" => state}} = conn) do
-    expected_state = conn.private[:ueberauth_state_param]
+    # Get expected state from cookie (fix for ueberauth state cookie bug)
+    expected_state = conn.private[:ueberauth_state_param] || Map.get(conn.req_cookies, "ueberauth.state_param")
 
     if state != expected_state do
       set_errors!(conn, [error("invalid_state", "Invalid state parameter. Possible CSRF attack.")])
@@ -111,0 +112,0 @@ defmodule Ueberauth.Strategy.EVESSO do
